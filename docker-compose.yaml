# The docker-compose.yml file describes the services that make your app. In this example those services are a web server and database.

version: "3.8"
   
services:
    django:
        build: .
        container_name: django_blog_container
        command: python mysite/manage.py runserver 0.0.0.0:8000
        volumes:
            - .:/django_dir
        ports:
            - "8000:8000"
        depends_on:
            - db
        image: app:django
    db:
        image: mysql:5.7.16
        container_name: mysqldb_blog_container
        command: --default-authentication-plugin=mysql_native_password
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
            # - MYSQL_ALLOW_EMPTY_PASSWORD=true
            # - MYSQL_ROOT_PASSWORD=123456
        ports:
                - 3306:${MYSQL_PORT}
        volumes:
            - ./data/mysql/db:/var/lib/mysql
    phpmyadmin:
        image: phpmyadmin/phpmyadmin:latest
        restart: always
        environment:
            PMA_HOST: db
            PMA_USER: ${MYSQL_USER}
            PMA_PASSWORD: ${MYSQL_PASSWORD}
        ports:
        - "8080:80"
    # adminer_container:
        # image: adminer:latest
        # environment: 
        #     ADMINER_DEFAULT_SERVER: d
        #     # ADMINER_DESIGN: galkaev
        # ports: 
        #   - 8080:8080
    # adminer:
    #        image: adminer
    #        restart: always
    #        ports:
    #           - 8081:8080
    #        environment:
    #             ADMINER_DEFAULT_SERVER: db
    #        links:
    #           - db:db
        #    depends_on: 
        #         - db
     
